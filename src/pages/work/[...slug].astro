---
// Collection
import BaseLayout from '../../layouts/BaseLayout.astro';
import ContactCta from '../../components/ContactCta.astro';
import Nav from '../../components/Nav.astro';
import PageTitle from '../../components/PageTitle.astro';
import CtaButton from '../../components/CtaButton.astro';
import Pill from '../../components/Pill.astro';

// Components imports
import { type CollectionEntry, getCollection } from 'astro:content';

interface Props {
  entry: CollectionEntry<'work'>;
}

// This is a dynamic route that generates a page for every Markdown file in src/content/
// https://docs.astro.build/en/core-concepts/routing/#dynamic-routes
export async function getStaticPaths() {
  const work = await getCollection('work');
  return work.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<BaseLayout
  title={entry.data.title}
  description={entry.data.description}
>
  <main class="wrapper">
    <div class="page-title">
      <Nav />
      <PageTitle title={entry.data.title} />
    </div>
    <div class="page-content">
      <CtaButton
        name="< Tous les projets"
        path="/work"
        style="secondary"
      />
      <div class="content">
        {
          entry.data.img && (
            <img
              src={entry.data.img}
              alt={entry.data.img_alt || ''}
            />
          )
        }
        <div class="content">
          <div class="content">{entry.data.description}</div>
          <div class="tags">
            {entry.data.tags.map((t) => <Pill>{t}</Pill>)}
          </div>
        </div>
        <div class="content">
          <Content />
        </div>
        <div class="links">
          <a
            href={entry.data.url}
            class="website"
            >Voir le site</a
          >
          <a
            href={entry.data.git}
            class="github"
            >Voir le code</a
          >
        </div>
      </div>
    </div>
  </main>

  <ContactCta />
</BaseLayout>

<style>
  .page-title {
    background-color: var(--black);
  }
  .page-content {
    padding: 2rem;
  }
  .back-link {
    display: none;
  }

  .tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .content {
    max-width: 65ch;
    margin-inline: auto;
    margin-block: 2rem;
  }

  @media (min-width: 50em) {
    .back-link {
      display: block;
      align-self: flex-start;
    }
  }

  .links {
    display: flex;
    justify-content: space-evenly;
  }
</style>
