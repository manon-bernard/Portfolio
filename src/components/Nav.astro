---
/** Main menu items */
const textLinks: { label: string; href: string }[] = [
  { label: 'Accueil', href: '/' },
  { label: 'A propos', href: '/about/' },
  { label: 'Projets', href: '/work/' },
  { label: 'Contact', href: '/contact/' },
];
---

<nav>
  <div class="menu-header">
    <!-- Home -->
    <a
      href="/"
      class="site-title">
      Manon Bernard
    </a>

    <!-- Toggle Button (Mobile) -->
    <menu-button>
      <template>
        <button
          aria-controls="navigation"
          aria-expanded="false">
          <span class="sr-only">Menu</span>
          <img
            src="/assets/svg/burger-icon-white.svg"
            alt="menu icon open"
            id="menu__icon--open"
            class="menu__icon"
          />
          <img
            src="/assets/svg/close-burger-icon-white.svg"
            alt="menu icon close"
            id="menu__icon--close"
            class="menu__icon"
          />
        </button>
      </template>
    </menu-button>
  </div>

  <!-- Nav Items -->
  <div class="menu-nav">
    <div
      id="menu-content"
      hidden>
      <ul class="nav-items">
        {
          textLinks.map(({ label, href }) => (
            <li>
              <a
                aria-current={Astro.url.pathname === href}
                class:list={[
                  'link',
                  {
                    active: Astro.url.pathname === href || (href !== '/' && Astro.url.pathname.startsWith(href)),
                  },
                ]}
                href={href}>
                {label}
              </a>
            </li>
          ))
        }
      </ul>
    </div>
  </div>
</nav>

<script>
  class MenuButton extends HTMLElement {
    constructor() {
      super();

      // Inject menu toggle button when JS runs.
      this.appendChild(this.querySelector('template')!.content.cloneNode(true));
      const btn = this.querySelector('button')!;

      // Hide menu (shown by default to support no-JS browsers).
      const menu = document.getElementById('menu-content')!;
      const menuOpenIcon = document.getElementById('menu__icon--open')!;
      const menuCloseIcon = document.getElementById('menu__icon--close')!;
      console.log(menuCloseIcon);
      console.log(menuOpenIcon);

      menu.hidden = true;
      menuCloseIcon.classList.add('visually-hidden');

      // Add "menu-content" class in JS to avoid covering content in non-JS browsers.
      menu.classList.add('menu-content');

      /** Set whether the menu is currently expanded or collapsed. */
      const setExpanded = (expand: boolean) => {
        btn.setAttribute('aria-expanded', expand ? 'true' : 'false');
        menu.hidden = !expand;
      };

      // Toggle menu visibility when the menu button is clicked.
      btn.addEventListener('click', () => {
        setExpanded(menu.hidden);
        menuOpenIcon.classList.toggle('visually-hidden');
        menuCloseIcon.classList.toggle('visually-hidden');
      });

      // Change icon when menu is clicked

      // Hide menu button for large screens.
      const handleViewports = (e: MediaQueryList | MediaQueryListEvent) => {
        setExpanded(e.matches);
        btn.hidden = e.matches;
      };
      const mediaQueries = window.matchMedia('(min-width: 50em)');
      handleViewports(mediaQueries);
      mediaQueries.addEventListener('change', handleViewports);
    }
  }
  customElements.define('menu-button', MenuButton);
</script>

<style>
  nav {
    width: 100%;
    color: var(--white);
  }

  nav button {
    border: none;
    width: 5rem;
    background-color: transparent;
  }

  .menu-header {
    height: 3rem;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    gap: 0.5rem;
    padding: 1rem;
  }

  .site-title {
    color: var(--white);
    text-decoration: none;
    font-size: var(--text-md);
    font-family: var(--ff-accent);
  }

  .menu-button[hidden] {
    display: none;
  }

  .nav-items {
    margin: 0;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    font-size: var(--text-md);
    line-height: 1.2;
    padding: 2rem;
    backdrop-filter: blur(10px);
    box-shadow: 0px 0px 50px var(--black);
  }

  @media (min-width: 50em) {
    nav {
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
      padding: 2.5rem 2.5rem;
      gap: 1rem;
    }

    .site-title {
      font-size: var(--text-lg);
    }

    .nav-items {
      flex-direction: row;
      font-size: var(--text-md);
      padding: 0.5rem 0.5625rem;
      background: transparent;
      backdrop-filter: none;
      box-shadow: none;
      gap: 2rem;
    }
  }

  @media (min-width: 60em) {
    .socials {
      display: flex;
      justify-content: flex-end;
      gap: 0;
    }
  }
  @media (forced-colors: active) {
    .link.active {
      color: SelectedItem;
    }
  }
</style>
